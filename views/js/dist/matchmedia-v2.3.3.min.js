/*!
 *  2018 DM Productions B.V.
 * 
 *  NOTICE OF LICENSE
 * 
 *  This source file is subject to the Academic Free License (AFL 3.0)
 *  that is bundled with this package in the file LICENSE.md
 *  It is also available through the world-wide-web at this URL:
 *  http://opensource.org/licenses/afl-3.0.php
 *  If you did not receive a copy of the license and are unable to
 *  obtain it through the world-wide-web, please send an email
 *  to info@dmp.nl so we can send you a copy immediately.
 * 
 *  @author     Michael Dekker <info@mijnpresta.nl>
 *  @copyright  2010-2019 DM Productions B.V.
 *  @license    http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
(window.webpackJsonPMyparcel=window.webpackJsonPMyparcel||[]).push([["matchmedia"],{434:function(e,t){
/*! matchMedia() polyfill addListener/removeListener extension. Author & copyright (c) 2012: Scott Jehl. MIT license */
!function(){if(window.matchMedia&&window.matchMedia("all").addListener)return!1;var e=window.matchMedia,t=e("only all").matches,n=!1,i=0,a=[],d=function(t){clearTimeout(i),i=setTimeout(function(){for(var t=0,n=a.length;t<n;t++){var i=a[t].mql,d=a[t].listeners||[],c=e(i.media).matches;if(c!==i.matches){i.matches=c;for(var o=0,r=d.length;o<r;o++)d[o].call(window,i)}}},30)};window.matchMedia=function(i){var c=e(i),o=[],r=0;return c.addListener=function(e){t&&(n||(n=!0,window.addEventListener("resize",d,!0)),0===r&&(r=a.push({mql:c,listeners:o})),o.push(e))},c.removeListener=function(e){for(var t=0,n=o.length;t<n;t++)o[t]===e&&o.splice(t,1)},c}}()},435:function(e,t){
/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. MIT license */
window.matchMedia||(window.matchMedia=function(){"use strict";var e=window.styleMedia||window.media;if(!e){var t,n=document.createElement("style"),i=document.getElementsByTagName("script")[0];n.type="text/css",n.id="matchmediajs-test",i?i.parentNode.insertBefore(n,i):document.head.appendChild(n),t="getComputedStyle"in window&&window.getComputedStyle(n,null)||n.currentStyle,e={matchMedium:function(e){var i="@media "+e+"{ #matchmediajs-test { width: 1px; } }";return n.styleSheet?n.styleSheet.cssText=i:n.textContent=i,"1px"===t.width}}}return function(t){return{matches:e.matchMedium(t||"all"),media:t||"all"}}}())}}]);